%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 271.000000 219.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.13.4 (Build 17E199) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 271 219
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 271 219
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: Helvetica
%!FontType1-1.0: Helvetica 1.0000.0.0000
14 dict begin/FontName /Helvetica def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /zero put
dup 34 /two put
dup 35 /six put
dup 36 /one put
dup 37 /four put
dup 38 /three put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1947 1 index div -985 2 index div 2961 3 index div 2297 5 -1 roll div]cvx def
/sfnts [<




351305201F7521220C217F0738166F220E270F811F38222447231076C418D4EDF4ED10F5EDE4003F3CFD3C3FED1112392F1217390111123912393911391239005D31304379401C04190C2511260B120E2800091407280119040D100A280108150A2801002B2B1010012B2B2B2B81005D36123F01363736353426232207060723363736213212151407060F01060706072115214A85C1C0813452967DB9472604B70342750128F6E37946B5896238641A030EFC29B90112706F4B35536B7D938C4B85BB76D0FEF6A3AC7A47654C3631576AAA000000010031FFD9041A059A003100C4401F490C532D6529632D7529752D069626014B082B0A182B140D03F93114350D20B8012340141135107F0D0D311B3524050735310D1896274411B8014A400F0A382E6F021F2920810327023347321076C418D4EDF4ED10F5EDEDF4ED003FED3FED12392FF4FDE610ED10ED111239011112393130437940362F301926000905261D2522260600032800040308300A28011C231F28001A251828010401072800092F0728001E211B280119261B2801002B2B2B2B012B2B2B103C2B2B2B2B818181005D015D0402353316171633323635342623220607351E013332373635342623220706072334373621321615140706071E01151400230116E5BC0C2846B78EACB5A11225131C26166541729865B4452605B2406E0115DBF0472C46717FFEF2F8270117C88B3F719878947601019F03022038906B7478427AA070C8C3B98452331D1FB180CDFEFE000000000200340000042F059C0002000D005C402209020A080D010202BE12060607020601050708030106070A02750B05EF030C070403B80117B501960D08AC0AB80158B3050F470E1076C418D4F5F43CFDE4003F3FF43CFD3C1139390111123911123939872E2B047D10C50F3130011109011121350133113315231102A5FE3501CEFD8C029098D3D301FB0289FD77FE05015EB0038EFC5F9DFEA20000000002004DFFDB0423059E001B002700A94039771A0117082508271958198600870188090747080A212721350E0E1403C707351B052735140D032902811E38116F170A023C0A2431172947281076C418D4FD397C4B52787A2F1810F5EDF4ED003FED3FEDED12392FED11123931304379403425261C200F1600060526200F1E280126152428001C131E2801060003280104031F1021280125162728001D1227280004010728012B2B2B2B01103C2B2B2B2B2B81818181015D005D001615232627262322020336373633320415140223220011103712211236353426232206151416330347BDB21023418497B20A3E5E566AB4010CFEEBC9FEDC417D014C818D7EA674AF9F8D059EF98455305AFEE9FEFC5B2D28E6E4C3FED301310169010BBA0164FADDBF826EC79A9B88B900000002002F0000044205930007

B10066455458B166406544B27640764523614459B36242725D456523456023456560234560B089766818B080622020B172424565234520B003266062636820B003266165B042236544B072234420B1625D4565234520B003266062636820B003266165B05D236544B0622344B1005D455458B15D406544B262406245236144592B2B2B2B456953427374B8019A2045694B20B02853B049515A58B020615944B801A6204569447500
00>] def
/CharStrings 8 dict dup begin
/.notdef 0 def
/zero 1 def
/one 2 def
/two 3 def
/three 4 def
/four 5 def
/six 6 def
/u20B8 7 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1947 -985 2961 2297}def
/UniqueID 4072461 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C980943B128E467A4B303542E85E0849534105E9F083E4E3373F14A64BC3AB0F9692F6BC106AE217BF94B71975CBCEAD28FD587E1BFB01FDF6931915C89E8032677890B9B723498510FBFA80C605F161F06E859104BA241B4B3BC00D3813315F95D9ED1561CB2865026CFD7B248F993DACDE80C0296C0628B07D51A1ADB3D1B6C593A5A060F3D29F832C12DF571476B8CD6631198F4D1DC315A8238F9142EC5C99A791A6D6B23168EAE93A5A0B972A995FF332A20896DFE02E73227F8CB94B945F35390C47D96A43448F9F1E88D0D6F7E914649019D0B1B4507BA13FFF6A431327D1EDB95A0A94E0D319B1DBA8687361B700B0E4C123EA88739714A7D22AFEBAF763007039AED6E7A9DA10E0C017FE92737E97C78BEACC93DE4B95BAD17943FAB1F1552ACC3AF812A67EEE518E72F4CDEF4A9982AF14BE2B32D813DF878742F971DBFDA1F84410B41D0156B479F66DC033875E3A1A00509AE634BAE2130228CB49FF433E0317F9CECA4F4546353A9934F9959506CBE93B50E7D1174DECFF0AA5644E9697031C3E29291903E76E334574CA02F3A1BD3D7846C806921B1DD89C789D05CEE091A84CABB08619C8D7BED8A6B5829A7C82EFFDB6C7A8989E0F38352D55E29A5CB3461179319ABC37A30FA0D17E928FF341211D4B7449C55CE0FE90251DFCB71B3E23D75A70E731C899C378C819D6529B8A4F9E0FD58B933C768BCF2856D6DBC54467D60535B666F639DEF01F95F8972E09FA5451A6A8E1841F2B4CCA2B2
9FC7D91FCC29B18B19B9E4FACD976C0F687FEF08EED64D5A61FB789306C317895A1A637BB92B1F0DD51C91681F57F4C752491A43D3905959A47BD7F947702F2D560177D5483A1ACBAD15785A966F572C23E37B082105A0F455A96E726C0E93AB47E40A05296A9D1B6DC60CC37C79732E1296CE341D85BDF2B73F84B81285DE1C89AA622DB9FEE6C992275A67025A033D5C81880A93F6D90A4E7896768DF9EB3C8A8E68644F16B5C1C297C236C69A6F3E0D9DDA368410FBE038FCF25412F15F46895D010CF2E52B5672132EF5AF3F68411960F428D32ECF4F62E5E57AFB8FBF11AAD26D3082F8802B1155EF6620A55D729F1383F3EF950F24E2CDAB7E5600041EF3B4BFB9E18E403AC34F12AB983937D9A1BD477CE406365D544FD332AB7A18A0D87AE64C93B5357BCABA7DFE84C1495528A298DDF826E35628E4F0A5BDC9B2B8BCAE1F5CF3A624C7B8BE2C4F289CC57651ECE1AB5BD3CD6A33754A52054AFD631E4938CED2DC403F97E23CE31838B159005133BC08707F9B55CF00F71AF9D4C9F05BEF42D95CFEF9597030568E2005FAB20A0B59DDFE2ED0AF28201586E4009706E0C8B177C76B9604E3094A8647758C5D599EA0758A9D0870A1716227FA745E595858E85E0C461F90E4DA50CBC7B8D78568445A9010BCA57BC8F2126D3E1DAC28417B16289B57BDBC78C605C0CF514202AE9B674307CF7627E65366E9255B83DE1753A02FFE795F9C54788A6E9E3B0246763B9F9D6AB3994FB64B7BACE6E742D9FE7FAF227F578B9FCFB653A908F82F0FA41768DB7FD9E01EA96209847DE2795CA7EE8669806611C7C9A34FC19F15EB342A6DA03D1A1E41FB611CE893BDA9ADFBA2279E3EF0FCAD655B962AC4BD13DD2FD548ABF7B5A265F303AA09B9BEC506868F83406A2236F6C7453C34381F823450591B45D4E7D6E2A73C2479B1113205D31440481A1CF8CD57E967E2F8CB4A81CAC32240BE148BF7AE5282C55DA1043444C4B21D2DD9C399D70D62B6E8EC0D367C9E96FC4509B03DE1EC08FD
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Helvetica cguidfix
/F1.1/Helvetica renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs3 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
1 1 1 sc
q
0 0 271 219 rc
-57 275 m
519 275 l
519 -459 l
-57 -459 l
h
-57 275 m
f
/Cs2 SC
1 0.83529413 0.45490196 sc
52.125 173.75 m
103.875 173.75 l
103.875 133.25 l
52.125 133.25 l
h
52.125 173.75 m
f
1 J
1 j
[
4
4
] 0 d
/Cs1 SC
0 0 0 sc
1 0 0 -1 -57 275 cm
109.5 101.5 m
161.5 101.5 l
161.5 142.5 l
109.5 142.5 l
h
109.5 101.25 m
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 78 153.5 cm
/F1.1[ 20 0 0 -20 0 0]sf
-5.5615234 7 m
(!)s
0.60000002 i
/Cs1 SC
1 1 1 sc
CM
104.125 173.75 m
155.875 173.75 l
155.875 133.25 l
104.125 133.25 l
h
104.125 173.75 m
f
0 0 0 sc
1 0 0 -1 -57 275 cm
161.5 101.5 m
213.5 101.5 l
213.5 142.5 l
161.5 142.5 l
h
161.5 101.25 m
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 130 153.5 cm
-5.5615234 7 m
(!)s
0.60000002 i
/Cs1 SC
1 1 1 sc
CM
155.875 173.75 m
207.625 173.75 l
207.625 133.25 l
155.875 133.25 l
h
155.875 173.75 m
f
0 0 0 sc
1 0 0 -1 -57 275 cm
213.5 101.5 m
264.5 101.5 l
264.5 142.5 l
213.5 142.5 l
h
213.5 101.25 m
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 181.75 153.5 cm
-5.5615234 7 m
(!)s
0.60000002 i
/Cs1 SC
1 1 1 sc
CM
207.625 173.75 m
259.375 173.75 l
259.375 133.25 l
207.625 133.25 l
h
207.625 173.75 m
f
0 0 0 sc
1 0 0 -1 -57 275 cm
264.5 101.5 m
316.5 101.5 l
316.5 142.5 l
264.5 142.5 l
h
264.5 101.25 m
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 233.5 153.5 cm
-5.5615234 7 m
(!)s
0.60000002 i
/Cs2 SC
1 0.84313726 0.41568628 sc
CM
52.125 133.25 m
103.875 133.25 l
103.875 92.75 l
52.125 92.75 l
h
52.125 133.25 m
f
/Cs1 SC
0 0 0 sc
1 0 0 -1 -57 275 cm
109.5 142.5 m
161.5 142.5 l
161.5 182.5 l
109.5 182.5 l
h
109.5 141.75 m
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 78 113 cm
-5.5615234 7 m
(")s
0.60000002 i
/Cs1 SC
1 1 1 sc
CM
104.125 133.25 m
155.875 133.25 l
155.875 92.75 l
104.125 92.75 l
h
104.125 133.25 m
f
0 0 0 sc
1 0 0 -1 -57 275 cm
161.5 142.5 m
213.5 142.5 l
213.5 182.5 l
161.5 182.5 l
h
161.5 141.75 m
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 130 113 cm
-5.5615234 7 m
(#)s
0.60000002 i
/Cs1 SC
1 1 1 sc
CM
156.125 133.25 m
207.875 133.25 l
207.875 92.75 l
156.125 92.75 l
h
156.125 133.25 m
f
0 0 0 sc
1 0 0 -1 -57 275 cm
213.5 142.5 m
265.5 142.5 l
265.5 182.5 l
213.5 182.5 l
h
213.5 141.75 m
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 182 113 cm
-5.5615234 7 m
($)s
0.60000002 i
/Cs1 SC
1 1 1 sc
CM
207.625 133.25 m
259.375 133.25 l
259.375 92.75 l
207.625 92.75 l
h
207.625 133.25 m
f
0 0 0 sc
1 0 0 -1 -57 275 cm
264.5 142.5 m
316.5 142.5 l
316.5 182.5 l
264.5 182.5 l
h
264.5 141.75 m
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 233.5 113 cm
-5.5615234 7 m
(%)s
0.60000002 i
/Cs1 SC
1 1 1 sc
CM
207.625 92.75 m
259.375 92.75 l
259.375 52.25 l
207.625 52.25 l
h
207.625 92.75 m
f
0 0 0 sc
1 0 0 -1 -57 275 cm
264.5 182.5 m
316.5 182.5 l
316.5 223.5 l
264.5 223.5 l
h
264.5 182.25 m
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 233.5 72.5 cm
-5.5615234 7 m
(!)s
0.60000002 i
/Cs1 SC
1 1 1 sc
CM
155.875 92.75 m
207.625 92.75 l
207.625 52.25 l
155.875 52.25 l
h
155.875 92.75 m
f
0 0 0 sc
1 0 0 -1 -57 275 cm
213.5 182.5 m
264.5 182.5 l
264.5 223.5 l
213.5 223.5 l
h
213.5 182.25 m
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 181.75 72.5 cm
-5.5615234 7 m
(")s
0.60000002 i
/Cs2 SC
1 0.85490197 0.37254903 sc
CM
52.125 92.75 m
103.875 92.75 l
103.875 52.25 l
52.125 52.25 l
h
52.125 92.75 m
f
/Cs1 SC
0 0 0 sc
1 0 0 -1 -57 275 cm
109.5 182.5 m
161.5 182.5 l
161.5 223.5 l
109.5 223.5 l
h
109.5 182.25 m
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 78 72.5 cm
-5.5615234 7 m
(!)s
0.60000002 i
/Cs2 SC
1 0.85490197 0.37254903 sc
CM
104.125 92.75 m
155.875 92.75 l
155.875 52.25 l
104.125 52.25 l
h
104.125 92.75 m
f
/Cs1 SC
0 0 0 sc
1 0 0 -1 -57 275 cm
161.5 182.5 m
213.5 182.5 l
213.5 223.5 l
161.5 223.5 l
h
161.5 182.25 m
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 130 72.5 cm
-5.5615234 7 m
($)s
0.60000002 i
/Cs1 SC
1 1 1 sc
CM
52.125 52.25 m
103.875 52.25 l
103.875 11.75 l
52.125 11.75 l
h
52.125 52.25 m
f
0 0 0 sc
1 0 0 -1 -57 275 cm
109.5 223.5 m
161.5 223.5 l
161.5 263.5 l
109.5 263.5 l
h
109.5 222.75 m
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 78 32 cm
-5.5615234 7 m
(%)s
0.60000002 i
/Cs2 SC
1 0.87058824 0.31764707 sc
CM
104.125 52.25 m
155.875 52.25 l
155.875 11.75 l
104.125 11.75 l
h
104.125 52.25 m
f
/Cs1 SC
0 0 0 sc
1 0 0 -1 -57 275 cm
161.5 223.5 m
213.5 223.5 l
213.5 263.5 l
161.5 263.5 l
h
161.5 222.75 m
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 130 32 cm
-5.5615234 7 m
(")s
0.60000002 i
/Cs1 SC
1 1 1 sc
CM
156.125 52.25 m
207.875 52.25 l
207.875 11.75 l
156.125 11.75 l
h
156.125 52.25 m
f
0 0 0 sc
1 0 0 -1 -57 275 cm
213.5 223.5 m
265.5 223.5 l
265.5 263.5 l
213.5 263.5 l
h
213.5 222.75 m
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 182 32 cm
-5.5615234 7 m
(!)s
0.60000002 i
/Cs1 SC
1 1 1 sc
CM
207.625 52.25 m
259.375 52.25 l
259.375 11.75 l
207.625 11.75 l
h
207.625 52.25 m
f
0 0 0 sc
1 0 0 -1 -57 275 cm
264.5 223.5 m
316.5 223.5 l
316.5 263.5 l
264.5 263.5 l
h
264.5 222.75 m
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 233.5 32 cm
-5.5615234 7 m
(")s
1 0 0 -1 35.25 153.5 cm
/F1.1[ 12 0 0 -12 0 0]sf
-3.3369141 4 m
(!)s
1 0 0 -1 35.25 113 cm
-3.3369141 4 m
($)s
1 0 0 -1 35.25 72.5 cm
-3.3369141 4 m
(")s
1 0 0 -1 35.25 32 cm
-3.3369141 4 m
(&)s
1 0 0 -1 78 189.5 cm
-3.3369141 4 m
(!)s
1 0 0 -1 129.75 189.5 cm
-3.3369141 4 m
($)s
1 0 0 -1 181.5 189.5 cm
-3.3369141 4 m
(")s
1 0 0 -1 233.25 189.5 cm
-3.3369141 4 m
(&)s
0.60000002 i
/Cs2 SC
1 0.84313726 0.41568628 sc
CM
86.4375 141.6875 m
89.4375 145.0625 l
89.4375 143.375 l
96.9375 143.375 l
96.9375 145.0625 l
99.9375 141.6875 l
96.9375 138.3125 l
96.9375 140 l
89.4375 140 l
89.4375 138.3125 l
h
86.4375 141.6875 m
f
[] 0 d
/Cs1 SC
0 0 0 sc
1 0 0 -1 -57 275 cm
143.4375 133.3125 m
146.5 129.9375 l
146.5 131.5 l
154.5 131.5 l
154.5 129.9375 l
156.9375 133.3125 l
154.5 136.6875 l
154.5 135.5 l
146.5 135.5 l
146.5 136.6875 l
h
143.4375 133.3125 m
S
1 1 1 sc
CM
139.3125 140 m
139.3125 143.375 l
147.8125 143.375 l
147.8125 145.0625 l
152.8125 141.6875 l
147.8125 138.3125 l
147.8125 140 l
h
139.3125 140 m
f
0 0 0 sc
1 0 0 -1 -57 275 cm
196.5 135.5 m
196.5 131.5 l
205.5 131.5 l
205.5 129.9375 l
209.8125 133.3125 l
205.5 136.6875 l
205.5 135.5 l
h
196.3125 135.5 m
S
1 1 1 sc
CM
190.5 141.6875 m
193.5 145.0625 l
193.5 143.375 l
201 143.375 l
201 145.0625 l
204 141.6875 l
201 138.3125 l
201 140 l
193.5 140 l
193.5 138.3125 l
h
190.5 141.6875 m
f
0 0 0 sc
1 0 0 -1 -57 275 cm
247.5 133.3125 m
250.5 129.9375 l
250.5 131.5 l
258.5 131.5 l
258.5 129.9375 l
261 133.3125 l
258.5 136.6875 l
258.5 135.5 l
250.5 135.5 l
250.5 136.6875 l
h
247.5 133.3125 m
S
1 1 1 sc
CM
241.6875 141.6875 m
244.6875 145.0625 l
244.6875 143.375 l
252.1875 143.375 l
252.1875 145.0625 l
255.1875 141.6875 l
252.1875 138.3125 l
252.1875 140 l
244.6875 140 l
244.6875 138.3125 l
h
241.6875 141.6875 m
f
0 0 0 sc
1 0 0 -1 -57 275 cm
298.6875 133.3125 m
301.5 129.9375 l
301.5 131.5 l
309.5 131.5 l
309.5 129.9375 l
312.1875 133.3125 l
309.5 136.6875 l
309.5 135.5 l
301.5 135.5 l
301.5 136.6875 l
h
298.6875 133.3125 m
S
/Cs2 SC
1 0.85490197 0.37254903 sc
CM
99.9375 101.75 m
99.9375 98.375 l
91.4375 98.375 l
91.4375 96.6875 l
86.4375 100.0625 l
91.4375 103.4375 l
91.4375 101.75 l
h
99.9375 101.75 m
f
/Cs1 SC
0 0 0 sc
1 0 0 -1 -57 275 cm
157.5 173.5 m
157.5 176.5 l
148.5 176.5 l
148.5 178.3125 l
143.4375 174.9375 l
148.5 171.5625 l
148.5 173.5 l
h
156.9375 173.5 m
S
/Cs2 SC
1 0.87058824 0.31764707 sc
CM
151.6875 20.75 m
151.6875 17.375 l
143.1875 17.375 l
143.1875 15.6875 l
138.1875 19.0625 l
143.1875 22.4375 l
143.1875 20.75 l
h
151.6875 20.75 m
f
/Cs1 SC
0 0 0 sc
1 0 0 -1 -57 275 cm
208.5 254.5 m
208.5 257.5 l
200.5 257.5 l
200.5 259.3125 l
195.1875 255.9375 l
200.5 252.5625 l
200.5 254.5 l
h
208.6875 254.5 m
S
1 1 1 sc
CM
204 20.75 m
204 17.375 l
195.5 17.375 l
195.5 15.6875 l
190.5 19.0625 l
195.5 22.4375 l
195.5 20.75 l
h
204 20.75 m
f
0 0 0 sc
1 0 0 -1 -57 275 cm
261.5 254.5 m
261.5 257.5 l
252.5 257.5 l
252.5 259.3125 l
247.5 255.9375 l
252.5 252.5625 l
252.5 254.5 l
h
261 254.5 m
S
1 1 1 sc
CM
86.4375 19.0625 m
89.4375 22.4375 l
89.4375 20.75 l
96.9375 20.75 l
96.9375 22.4375 l
99.9375 19.0625 l
96.9375 15.6875 l
96.9375 17.375 l
89.4375 17.375 l
89.4375 15.6875 l
h
86.4375 19.0625 m
f
0 0 0 sc
1 0 0 -1 -57 275 cm
143.4375 255.9375 m
146.5 252.5625 l
146.5 254.5 l
154.5 254.5 l
154.5 252.5625 l
156.9375 255.9375 l
154.5 259.3125 l
154.5 257.5 l
146.5 257.5 l
146.5 259.3125 l
h
143.4375 255.9375 m
S
1 1 1 sc
CM
190.5 59.5625 m
193.5 62.9375 l
193.5 61.25 l
201 61.25 l
201 62.9375 l
204 59.5625 l
201 56.1875 l
201 57.875 l
193.5 57.875 l
193.5 56.1875 l
h
190.5 59.5625 m
f
0 0 0 sc
1 0 0 -1 -57 275 cm
247.5 215.4375 m
250.5 212.0625 l
250.5 214.5 l
258.5 214.5 l
258.5 212.0625 l
261 215.4375 l
258.5 218.8125 l
258.5 217.5 l
250.5 217.5 l
250.5 218.8125 l
h
247.5 215.4375 m
S
1 1 1 sc
CM
241.6875 59.5625 m
244.6875 62.9375 l
244.6875 61.25 l
252.1875 61.25 l
252.1875 62.9375 l
255.1875 59.5625 l
252.1875 56.1875 l
252.1875 57.875 l
244.6875 57.875 l
244.6875 56.1875 l
h
241.6875 59.5625 m
f
0 0 0 sc
1 0 0 -1 -57 275 cm
298.6875 215.4375 m
301.5 212.0625 l
301.5 214.5 l
309.5 214.5 l
309.5 212.0625 l
312.1875 215.4375 l
309.5 218.8125 l
309.5 217.5 l
301.5 217.5 l
301.5 218.8125 l
h
298.6875 215.4375 m
S
1 1 1 sc
CM
139.3125 98.375 m
139.3125 101.75 l
147.8125 101.75 l
147.8125 103.4375 l
152.8125 100.0625 l
147.8125 96.6875 l
147.8125 98.375 l
h
139.3125 98.375 m
f
0 0 0 sc
1 0 0 -1 -57 275 cm
196.5 176.5 m
196.5 173.5 l
205.5 173.5 l
205.5 171.5625 l
209.8125 174.9375 l
205.5 178.3125 l
205.5 176.5 l
h
196.3125 176.5 m
S
/Cs2 SC
1 0.87058824 0.31764707 sc
CM
139.3125 57.875 m
139.3125 61.25 l
147.8125 61.25 l
147.8125 62.9375 l
152.8125 59.5625 l
147.8125 56.1875 l
147.8125 57.875 l
h
139.3125 57.875 m
f
/Cs1 SC
0 0 0 sc
1 0 0 -1 -57 275 cm
196.5 217.5 m
196.5 214.5 l
205.5 214.5 l
205.5 212.0625 l
209.8125 215.4375 l
205.5 218.8125 l
205.5 217.5 l
h
196.3125 217.5 m
S
1 1 1 sc
CM
190.5 98.375 m
190.5 101.75 l
199 101.75 l
199 103.4375 l
204 100.0625 l
199 96.6875 l
199 98.375 l
h
190.5 98.375 m
f
0 0 0 sc
1 0 0 -1 -57 275 cm
247.5 176.5 m
247.5 173.5 l
256.5 173.5 l
256.5 171.5625 l
261 174.9375 l
256.5 178.3125 l
256.5 176.5 l
h
247.5 176.5 m
S
1 1 1 sc
CM
241.6875 98.375 m
241.6875 101.75 l
250.1875 101.75 l
250.1875 103.4375 l
255.1875 100.0625 l
250.1875 96.6875 l
250.1875 98.375 l
h
241.6875 98.375 m
f
0 0 0 sc
1 0 0 -1 -57 275 cm
298.5 176.5 m
298.5 173.5 l
307.5 173.5 l
307.5 171.5625 l
312.1875 174.9375 l
307.5 178.3125 l
307.5 176.5 l
h
298.6875 176.5 m
S
1 1 1 sc
CM
241.6875 17.375 m
241.6875 20.75 l
250.1875 20.75 l
250.1875 22.4375 l
255.1875 19.0625 l
250.1875 15.6875 l
250.1875 17.375 l
h
241.6875 17.375 m
f
0 0 0 sc
1 0 0 -1 -57 275 cm
298.5 257.5 m
298.5 254.5 l
307.5 254.5 l
307.5 252.5625 l
312.1875 255.9375 l
307.5 259.3125 l
307.5 257.5 l
h
298.6875 257.5 m
S
/Cs2 SC
1 0.87058824 0.31764707 sc
CM
86.4375 59.5625 m
89.4375 62.9375 l
89.4375 61.25 l
96.9375 61.25 l
96.9375 62.9375 l
99.9375 59.5625 l
96.9375 56.1875 l
96.9375 57.875 l
89.4375 57.875 l
89.4375 56.1875 l
h
86.4375 59.5625 m
f
/Cs1 SC
0 0 0 sc
1 0 0 -1 -57 275 cm
143.4375 215.4375 m
146.5 212.0625 l
146.5 214.5 l
154.5 214.5 l
154.5 212.0625 l
156.9375 215.4375 l
154.5 218.8125 l
154.5 217.5 l
146.5 217.5 l
146.5 218.8125 l
h
143.4375 215.4375 m
S
CM
99.9375 165.3125 m
99.9375 161.9375 l
91.4375 161.9375 l
91.4375 160.25 l
86.4375 163.625 l
91.4375 167 l
91.4375 165.3125 l
h
99.9375 165.3125 m
f
1 0 0 -1 -57 275 cm
157.5 109.5 m
157.5 113.5 l
148.5 113.5 l
148.5 114.75 l
143.4375 111.375 l
148.5 108 l
148.5 109.5 l
h
156.9375 109.5 m
S
CM
241.6875 161.9375 m
241.6875 165.3125 l
250.1875 165.3125 l
250.1875 167 l
255.1875 163.625 l
250.1875 160.25 l
250.1875 161.9375 l
h
241.6875 161.9375 m
f
1 0 0 -1 -57 275 cm
298.5 113.5 m
298.5 109.5 l
307.5 109.5 l
307.5 108 l
312.1875 111.375 l
307.5 114.75 l
307.5 113.5 l
h
298.6875 113.5 m
S
CM
86.4375 82.0625 m
86.4375 85.4375 l
94.9375 85.4375 l
94.9375 87.125 l
99.9375 83.75 l
94.9375 80.375 l
94.9375 82.0625 l
h
86.4375 82.0625 m
f
1 0 0 -1 -57 275 cm
143.5 193.5 m
143.5 189.5 l
152.5 189.5 l
152.5 187.875 l
156.9375 191.25 l
152.5 194.625 l
152.5 193.5 l
h
143.4375 193.5 m
S
CM
190.5 161.9375 m
190.5 165.3125 l
199 165.3125 l
199 167 l
204 163.625 l
199 160.25 l
199 161.9375 l
h
190.5 161.9375 m
f
1 0 0 -1 -57 275 cm
247.5 113.5 m
247.5 109.5 l
256.5 109.5 l
256.5 108 l
261 111.375 l
256.5 114.75 l
256.5 113.5 l
h
247.5 113.5 m
S
CM
86.4375 40.4375 m
86.4375 43.8125 l
94.9375 43.8125 l
94.9375 45.5 l
99.9375 42.125 l
94.9375 38.75 l
94.9375 40.4375 l
h
86.4375 40.4375 m
f
1 0 0 -1 -57 275 cm
143.5 234.5 m
143.5 231.5 l
152.5 231.5 l
152.5 229.5 l
156.9375 232.875 l
152.5 236.25 l
152.5 234.5 l
h
143.4375 234.5 m
S
CM
241.6875 82.0625 m
241.6875 85.4375 l
250.1875 85.4375 l
250.1875 87.125 l
255.1875 83.75 l
250.1875 80.375 l
250.1875 82.0625 l
h
241.6875 82.0625 m
f
1 0 0 -1 -57 275 cm
298.5 193.5 m
298.5 189.5 l
307.5 189.5 l
307.5 187.875 l
312.1875 191.25 l
307.5 194.625 l
307.5 193.5 l
h
298.6875 193.5 m
S
CM
204 85.4375 m
204 82.0625 l
195.5 82.0625 l
195.5 80.375 l
190.5 83.75 l
195.5 87.125 l
195.5 85.4375 l
h
204 85.4375 m
f
1 0 0 -1 -57 275 cm
261.5 189.5 m
261.5 193.5 l
252.5 193.5 l
252.5 194.625 l
247.5 191.25 l
252.5 187.875 l
252.5 189.5 l
h
261 189.5 m
S
ep
end
%%Trailer
%%EOF
